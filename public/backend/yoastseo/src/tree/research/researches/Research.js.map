{"version":3,"sources":["../../../../../src/tree/research/researches/Research.js"],"names":["Research","node","console","warn","results"],"mappings":";;;;;;;;;;AAAA;;;;;;;IAOMA,Q;;;;;;;;AACL;;;;;;;;;6BASYC,I,EAAO;AAAE;AACpBC,WAAQC,IAAR,CAAc,kEAAd;AACA;;AAED;;;;;;;;;;;;+BAScF,I,EAAO;AAAE;AACtBC,WAAQC,IAAR,CAAc,oEAAd;AACA;;AAED;;;;;;;;;;;;uCASsBC,O,EAAU;AAAE;AACjCF,WAAQC,IAAR,CAAc,4EAAd;AACA;;;;;;kBAGaH,Q","file":"Research.js","sourcesContent":["/**\n * A research that can be applied to the tree.\n *\n * @memberOf module:tree/research\n *\n * @abstract\n */\nclass Research {\n\t/**\n\t * Checks if the given node is a leaf node for this research.\n\t *\n\t * @param {module:tree/structure.Node} node The node to check.\n\t *\n\t * @returns {boolean} If the given node is considered a leaf node for this research.\n\t *\n\t * @abstract\n\t */\n\tisLeafNode( node ) { // eslint-disable-line no-unused-vars\n\t\tconsole.warn( \"isLeafNode should be implemented by a child class of Researcher.\" );\n\t}\n\n\t/**\n\t * Calculates the result of the research for the given Node.\n\t *\n\t * @param {module:tree/structure.Node} node The node to calculate the research for.\n\t *\n\t * @returns {Promise<*>} The result of the research.\n\t *\n\t * @abstract\n\t */\n\tcalculateFor( node ) { // eslint-disable-line no-unused-vars\n\t\tconsole.warn( \"calculateFor should be implemented by a child class of Researcher.\" );\n\t}\n\n\t/**\n\t * Merges results of this research according to a predefined strategy.\n\t *\n\t * @param {Array<*>} results The results of this research to merge.\n\t *\n\t * @returns {*} The merged results.\n\t *\n\t * @abstract\n\t */\n\tmergeChildrenResults( results ) { // eslint-disable-line no-unused-vars\n\t\tconsole.warn( \"mergeChildrenResults should be implemented by a child class of Researcher.\" );\n\t}\n}\n\nexport default Research;\n"]}