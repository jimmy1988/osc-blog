{"version":3,"sources":["../../../../../src/tree/research/researches/Headings.js"],"names":["Headings","node","Heading","Promise","resolve","LeafNode","results","Research"],"mappings":";;;;;;;;AAAA;;AAGA;;AACA;;;;AACA;;;;;;;;;;;;AAHA;;;AAKA;;;IAGMA,Q;;;;;;;;;;;;AACL;;;;;;;+BAOcC,I,EAAO;AACpB,UAAOA,gBAAgBC,kBAAhB,GAA0BC,QAAQC,OAAR,CAAiB,CAAEH,IAAF,CAAjB,CAA1B,GAAwDE,QAAQC,OAAR,CAAiB,EAAjB,CAA/D;AACA;;AAED;;;;;;;;;;6BAOYH,I,EAAO;AAClB,UAAOA,gBAAgBI,kBAAvB;AACA;;AAED;;;;;;;;;;uCAOsBC,O,EAAU;AAC/B,UAAO,uBAASA,OAAT,CAAP;AACA;;;;EAhCqBC,kB;;kBAmCRP,Q","file":"Headings.js","sourcesContent":["import { flatten } from \"lodash-es\";\n\n/* Internal dependencies */\nimport { Heading } from \"../../structure\";\nimport LeafNode from \"../../structure/nodes/LeafNode\";\nimport Research from \"./Research\";\n\n/**\n * A research giving back the headings located in a text.\n */\nclass Headings extends Research {\n\t/**\n\t * Calculates the result of the research for the given Node.\n\t *\n\t * @param {module:tree/structure.Node} node The node to do the research on.\n\t *\n\t * @returns {Promise<module:tree/structure.Heading[]|[]>} The result of the research.\n\t */\n\tcalculateFor( node ) {\n\t\treturn node instanceof Heading ? Promise.resolve( [ node ] ) : Promise.resolve( [] );\n\t}\n\n\t/**\n\t * Checks if the given node is a leaf node for this research.\n\t *\n\t * @param {module:tree/structure.Node} node The node to check.\n\t *\n\t * @returns {boolean} If the given node is considered a leaf node for this research.\n\t */\n\tisLeafNode( node ) {\n\t\treturn node instanceof LeafNode;\n\t}\n\n\t/**\n\t * Merges results of this research according to a predefined strategy.\n\t *\n\t * @param {Array<module:tree/structure.Heading[]>} results The results of this research to merge.\n\t *\n\t * @returns {module:tree/structure.Heading[]} The merged results.\n\t */\n\tmergeChildrenResults( results ) {\n\t\treturn flatten( results );\n\t}\n}\n\nexport default Headings;\n"]}