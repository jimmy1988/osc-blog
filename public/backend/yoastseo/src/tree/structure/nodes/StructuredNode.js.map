{"version":3,"sources":["../../../../../src/tree/structure/nodes/StructuredNode.js"],"names":["StructuredNode","tag","children","Node"],"mappings":";;;;;;AAAA;;;;;;;;;;;;AACA;;;;;;;;;;;IAWMA,c;;;AACL;;;;;;;;;;;AAWA,yBAAaC,GAAb,EAAmB;AAAA;;AAElB;;;;AAFkB,8HACX,gBADW;;AAMlB,QAAKA,GAAL,GAAWA,GAAX;AACA;;;;AAIA,QAAKC,QAAL,GAAgB,EAAhB;AAXkB;AAYlB;;;EAxB2BC,c;;kBA0BdH,c","file":"StructuredNode.js","sourcesContent":["import Node from \"./Node\";\n/**\n * Represents a piece of structure that is present in the original text, but is not relevant for the further analysis\n * of the text.\n *\n * Talking about HTML, this would encompass thing like `<div>`, `<section>`, `<aside>`, `<fieldset>`\n * and other HTML block elements.\n *\n * @extends module:tree/structure.Node\n *\n * @memberOf module:tree/structure\n */\nclass StructuredNode extends Node {\n\t/**\n\t * Represents a piece of structure that is present in the original text, but is not relevant for the further\n\t * analysis of the text.\n\t *\n\t * Talking about HTML, this would encompass thing like `<div>`, `<section>`, `<aside>`, `<fieldset>`\n\t * and other HTML block elements.\n\t *\n\t * @param {string} tag The tag used in the node.\n\t *\n\t * @returns {void}\n\t */\n\tconstructor( tag ) {\n\t\tsuper( \"StructuredNode\" );\n\t\t/**\n\t\t * Type of structured node (e.g. \"div\", \"section\" etc.).\n\t\t * @type {string}\n\t\t */\n\t\tthis.tag = tag;\n\t\t/**\n\t\t * This node's child nodes.\n\t\t * @type {Node[]}\n\t\t */\n\t\tthis.children = [];\n\t}\n}\nexport default StructuredNode;\n"]}