{"version":3,"sources":["../../../src/worker/AnalysisWebWorker.js"],"names":["assessments","bundledPlugins","helpers","markers","string","interpreters","config","YoastSEO","Assessor","Assessment","SEOAssessor","ContentAssessor","TaxonomyAssessor","Pluggable","Researcher","SnippetPreview","RelatedKeywordAssessor","Paper","AssessmentResult","keyphraseDistribution","seo","KeyphraseDistributionAssessment","logger","setDefaultLevel","AnalysisWebWorker","scope","_scope","_configuration","contentAnalysisActive","keywordAnalysisActive","useCornerstone","useTaxonomy","useKeywordDistribution","locale","_scheduler","Scheduler","_paper","_relatedKeywords","_i18n","createI18n","_researcher","_contentAssessor","_seoAssessor","_relatedKeywordAssessor","_results","readability","results","score","_registeredAssessments","_registeredMessageHandlers","analyze","bind","analyzeDone","analyzeRelatedKeywordsDone","loadScript","loadScriptDone","customMessage","customMessageDone","clearCache","runResearch","runResearchDone","registerAssessment","registerMessageHandler","refreshAssessment","handleMessage","analyzeRelatedKeywords","onmessage","analysisWorker","yoast","analysis","data","type","id","payload","Transporter","parse","debug","initialize","startPolling","schedule","execute","done","name","error","Error","console","warn","assessor","CornerstoneContentAssessor","researcher","CornerstoneSEOAssessor","getAssessment","addAssessment","forEach","assessment","RelatedKeywordTaxonomyAssessor","CornerstoneRelatedKeywordAssessor","serialize","postMessage","configuration","update","shouldAssessorsUpdate","translations","researchData","research","addResearchData","params","defaultQueryParams","setLevel","logLevel","createContentAssessor","createSEOAssessor","createRelatedKeywordsAssessor","send","pluginName","InvalidTypeError","combinedName","push","handler","paper","getText","getLocale","key","keyword","synonyms","relatedKeywords","_text","removeHtmlBlocks","paperHasChanges","equals","shouldReadabilityUpdate","setPaper","setLocale","assess","calculateOverallScore","requestedRelatedKeywordKeys","relatedKeyword","relatedPaper","length","url","loaded","message","importScripts","result","success","morphologyData","getData","getResearch","domain","locale_data","Jed","contentAssessor","seoAssessor","configurationKeys","Object","keys"],"mappings":";;;;;;;;qjBAAA;;;AAMA;;;AALA;;AACA;;;;AACA;;AACA;;AAGA;;IAAYA,W;;AACZ;;IAAYC,c;;AACZ;;IAAYC,O;;AACZ;;IAAYC,O;;AACZ;;IAAYC,M;;AACZ;;IAAYC,Y;;AACZ;;IAAYC,M;;AAEZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AA0BA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAjCA,IAAMC,WAAW;AAChBC,6BADgB;AAEhBC,iCAFgB;AAGhBC,mCAHgB;AAIhBC,2CAJgB;AAKhBC,6CALgB;AAMhBC,+BANgB;AAOhBC,iCAPgB;AAQhBC,yCARgB;AAShBC,yDATgB;;AAWhBC,uBAXgB;AAYhBC,6CAZgB;;AAchBlB,yBAdgB;AAehBC,+BAfgB;AAgBhBC,iBAhBgB;AAiBhBC,iBAjBgB;AAkBhBC,eAlBgB;AAmBhBC,2BAnBgB;AAoBhBC;AApBgB,CAAjB;;AAuBA;;;AAaA,IAAMa,wBAAwB,IAAInB,YAAYoB,GAAZ,CAAgBC,+BAApB,EAA9B;;AAEA,IAAMC,SAAS,yBAAW,uBAAX,CAAf;AACAA,OAAOC,eAAP,CAAwB,OAAxB;;AAEA;;;;;;;IAMqBC,iB;AACpB;;;;;;AAMA,4BAAaC,KAAb,EAAqB;AAAA;;AACpB,OAAKC,MAAL,GAAcD,KAAd;;AAEA,OAAKE,cAAL,GAAsB;AACrBC,0BAAuB,IADF;AAErBC,0BAAuB,IAFF;AAGrBC,mBAAgB,KAHK;AAIrBC,gBAAa,KAJQ;AAKrBC,2BAAwB,KALH;AAMrB;AACAC,WAAQ;AAPa,GAAtB;;AAUA,OAAKC,UAAL,GAAkB,IAAIC,mBAAJ,EAAlB;;AAEA,OAAKC,MAAL,GAAc,IAAd;AACA,OAAKC,gBAAL,GAAwB,EAAxB;;AAEA,OAAKC,KAAL,GAAad,kBAAkBe,UAAlB,EAAb;AACA,OAAKC,WAAL,GAAmB,IAAI1B,oBAAJ,CAAgB,KAAKsB,MAArB,CAAnB;;AAEA,OAAKK,gBAAL,GAAwB,IAAxB;AACA,OAAKC,YAAL,GAAoB,IAApB;AACA,OAAKC,uBAAL,GAA+B,IAA/B;;AAEA;;;;;;;;;;;;;AAaA,OAAKC,QAAL,GAAgB;AACfC,gBAAa;AACZC,aAAS,EADG;AAEZC,WAAO;AAFK,IADE;AAKf3B,QAAK;AACJ,QAAI;AACH0B,cAAS,EADN;AAEHC,YAAO;AAFJ;AADA;AALU,GAAhB;AAYA,OAAKC,sBAAL,GAA8B,EAA9B;AACA,OAAKC,0BAAL,GAAkC,EAAlC;;AAEA;AACA,OAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAmB,IAAnB,CAAf;AACA,OAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAuB,IAAvB,CAAnB;AACA,OAAKE,0BAAL,GAAkC,KAAKA,0BAAL,CAAgCF,IAAhC,CAAsC,IAAtC,CAAlC;AACA,OAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAsB,IAAtB,CAAlB;AACA,OAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAA0B,IAA1B,CAAtB;AACA,OAAKK,aAAL,GAAqB,KAAKA,aAAL,CAAmBL,IAAnB,CAAyB,IAAzB,CAArB;AACA,OAAKM,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBN,IAAvB,CAA6B,IAA7B,CAAzB;AACA,OAAKO,UAAL,GAAkB,KAAKA,UAAL,CAAgBP,IAAhB,CAAsB,IAAtB,CAAlB;AACA,OAAKQ,WAAL,GAAmB,KAAKA,WAAL,CAAiBR,IAAjB,CAAuB,IAAvB,CAAnB;AACA,OAAKS,eAAL,GAAuB,KAAKA,eAAL,CAAqBT,IAArB,CAA2B,IAA3B,CAAvB;;AAEA;AACA,OAAKU,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBV,IAAxB,CAA8B,IAA9B,CAA1B;AACA,OAAKW,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BX,IAA5B,CAAkC,IAAlC,CAA9B;AACA,OAAKY,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBZ,IAAvB,CAA6B,IAA7B,CAAzB;;AAEA;AACA,OAAKa,aAAL,GAAqB,KAAKA,aAAL,CAAmBb,IAAnB,CAAyB,IAAzB,CAArB;;AAEA;AACA,OAAKc,sBAAL,GACC,wCAA0B3C,MAA1B,EAAkC,KAAK4B,OAAvC,EAAgD,gEAAhD,CADD;AAEA;;;;AAIA,OAAKA,OAAL,GAAe,wCAA0B5B,MAA1B,EAAkC,KAAK4B,OAAvC,EAAgD,+CAAhD,CAAf;AACA,OAAKS,WAAL,GAAmB,wCAA0BrC,MAA1B,EAAkC,KAAKqC,WAAvC,EAClB,0DADkB,CAAnB;AAEA;;AAED;;;;;;;;;6BAKW;AACV,QAAKjC,MAAL,CAAYwC,SAAZ,GAAwB,KAAKF,aAA7B;AACA,QAAKtC,MAAL,CAAYyC,cAAZ,GAA6B;AAC5BN,wBAAoB,KAAKA,kBADG;AAE5BC,4BAAwB,KAAKA,sBAFD;AAG5BC,uBAAmB,KAAKA;AAHI,IAA7B;AAKA,QAAKrC,MAAL,CAAY0C,KAAZ,GAAoB,KAAK1C,MAAL,CAAY0C,KAAZ,IAAqB,EAAzC;AACA,QAAK1C,MAAL,CAAY0C,KAAZ,CAAkBC,QAAlB,GAA6B9D,QAA7B;AACA;;AAED;;;;;;;;;;;;;;;;sCAaiD;AAAA,wBAAhC+D,IAAgC;AAAA,OAAxBC,IAAwB,aAAxBA,IAAwB;AAAA,OAAlBC,EAAkB,aAAlBA,EAAkB;AAAA,OAAdC,OAAc,aAAdA,OAAc;;AAChDA,aAAUC,sBAAYC,KAAZ,CAAmBF,OAAnB,CAAV;;AAEAnD,UAAOsD,KAAP,CAAc,6BAAd,EAA6CL,IAA7C,EAAmDC,EAAnD,EAAuDC,OAAvD;;AAEA,WAASF,IAAT;AACC,SAAK,YAAL;AACC,UAAKM,UAAL,CAAiBL,EAAjB,EAAqBC,OAArB;AACA,UAAKvC,UAAL,CAAgB4C,YAAhB;AACA;AACD,SAAK,SAAL;AACC,UAAK5C,UAAL,CAAgB6C,QAAhB,CAA0B;AACzBP,YADyB;AAEzBQ,eAAS,KAAK9B,OAFW;AAGzB+B,YAAM,KAAK7B,WAHc;AAIzBkB,YAAMG,OAJmB;AAKzBF,YAAMA;AALmB,MAA1B;AAOA;AACD,SAAK,wBAAL;AACC,UAAKrC,UAAL,CAAgB6C,QAAhB,CAA0B;AACzBP,YADyB;AAEzBQ,eAAS,KAAKf,sBAFW;AAGzBgB,YAAM,KAAK5B,0BAHc;AAIzBiB,YAAMG,OAJmB;AAKzBF,YAAMA;AALmB,MAA1B;AAOA;AACD,SAAK,YAAL;AACC,UAAKrC,UAAL,CAAgB6C,QAAhB,CAA0B;AACzBP,YADyB;AAEzBQ,eAAS,KAAK1B,UAFW;AAGzB2B,YAAM,KAAK1B,cAHc;AAIzBe,YAAMG,OAJmB;AAKzBF,YAAMA;AALmB,MAA1B;AAOA;AACD,SAAK,aAAL;AACC,UAAKrC,UAAL,CAAgB6C,QAAhB,CAA0B;AACzBP,YADyB;AAEzBQ,eAAS,KAAKrB,WAFW;AAGzBsB,YAAM,KAAKrB,eAHc;AAIzBU,YAAMG;AAJmB,MAA1B;AAMA;AACD,SAAK,eAAL;AAAsB;AACrB,UAAMS,OAAOT,QAAQS,IAArB;AACA,UAAKA,QAAQ,KAAKjC,0BAAL,CAAiCiC,IAAjC,CAAb,EAAuD;AACtD,YAAKhD,UAAL,CAAgB6C,QAAhB,CAA0B;AACzBP,cADyB;AAEzBQ,iBAAS,KAAKxB,aAFW;AAGzByB,cAAM,KAAKxB,iBAHc;AAIzBa,cAAMG,OAJmB;AAKzBF,cAAMA;AALmB,QAA1B;AAOA;AACA;AACD,WAAKd,iBAAL,CAAwBe,EAAxB,EAA4B,EAAEW,OAAO,IAAIC,KAAJ,CAAW,2DAA2DF,IAAtE,CAAT,EAA5B;AACA;AACA;AACD;AACCG,aAAQC,IAAR,CAAc,wCAAd,EAAwDf,IAAxD;AAxDF;AA0DA;;AAED;;;;;;;;;;;;;AAuBA;;;;;;;0CAOwB;AAAA,wBAKnB,KAAK5C,cALc;AAAA,OAEtBC,qBAFsB,kBAEtBA,qBAFsB;AAAA,OAGtBE,cAHsB,kBAGtBA,cAHsB;AAAA,OAItBG,MAJsB,kBAItBA,MAJsB;;;AAOvB,OAAKL,0BAA0B,KAA/B,EAAuC;AACtC,WAAO,IAAP;AACA;;AAED,OAAM2D,WAAWzD,mBAAmB,IAAnB,GACd,IAAI0D,yBAAJ,CAAgC,KAAKlD,KAArC,EAA4C,EAAEL,cAAF,EAA5C,CADc,GAEd,IAAItB,yBAAJ,CAAqB,KAAK2B,KAA1B,EAAiC,EAAEL,cAAF,EAAjC,CAFH;;AAIA,UAAOsD,QAAP;AACA;;AAED;;;;;;;;;;sCAOoB;AAAA,yBAOf,KAAK5D,cAPU;AAAA,OAElBE,qBAFkB,mBAElBA,qBAFkB;AAAA,OAGlBC,cAHkB,mBAGlBA,cAHkB;AAAA,OAIlBE,sBAJkB,mBAIlBA,sBAJkB;AAAA,OAKlBD,WALkB,mBAKlBA,WALkB;AAAA,OAMlBE,MANkB,mBAMlBA,MANkB;;;AASnB,OAAKJ,0BAA0B,KAA/B,EAAuC;AACtC,WAAO,IAAP;AACA;;AAED,OAAI0D,iBAAJ;;AAEA,OAAKxD,gBAAgB,IAArB,EAA4B;AAC3BwD,eAAW,IAAI3E,0BAAJ,CAAsB,KAAK0B,KAA3B,EAAkC,EAAEL,QAAQA,MAAV,EAAkBwD,YAAY,KAAKjD,WAAnC,EAAlC,CAAX;AACA,IAFD,MAEO;AACN+C,eAAWzD,mBAAmB,IAAnB,GACR,IAAI4D,qBAAJ,CAA4B,KAAKpD,KAAjC,EAAwC,EAAEL,QAAQA,MAAV,EAAkBwD,YAAY,KAAKjD,WAAnC,EAAxC,CADQ,GAER,IAAI9B,qBAAJ,CAAiB,KAAK4B,KAAtB,EAA6B,EAAEL,QAAQA,MAAV,EAAkBwD,YAAY,KAAKjD,WAAnC,EAA7B,CAFH;AAGA;;AAGD,OAAKR,0BAA0B,2BAAauD,SAASI,aAAT,CAAwB,uBAAxB,CAAb,CAA/B,EAAkG;AACjGJ,aAASK,aAAT,CAAwB,uBAAxB,EAAiDzE,qBAAjD;AACA;;AAED,QAAK6B,sBAAL,CAA4B6C,OAA5B,CAAqC,iBAA4B;AAAA,QAAxBX,IAAwB,SAAxBA,IAAwB;AAAA,QAAlBY,UAAkB,SAAlBA,UAAkB;;AAChE,QAAK,2BAAaP,SAASI,aAAT,CAAwBT,IAAxB,CAAb,CAAL,EAAqD;AACpDK,cAASK,aAAT,CAAwBV,IAAxB,EAA8BY,UAA9B;AACA;AACD,IAJD;;AAMA,UAAOP,QAAP;AACA;;AAED;;;;;;;;;;kDAOgC;AAAA,yBAM3B,KAAK5D,cANsB;AAAA,OAE9BE,qBAF8B,mBAE9BA,qBAF8B;AAAA,OAG9BC,cAH8B,mBAG9BA,cAH8B;AAAA,OAI9BC,WAJ8B,mBAI9BA,WAJ8B;AAAA,OAK9BE,MAL8B,mBAK9BA,MAL8B;;;AAQ/B,OAAKJ,0BAA0B,KAA/B,EAAuC;AACtC,WAAO,IAAP;AACA;;AAED,OAAI0D,iBAAJ;;AAEA,OAAKxD,gBAAgB,IAArB,EAA4B;AAC3BwD,eAAW,IAAIQ,wCAAJ,CAAoC,KAAKzD,KAAzC,EAAgD,EAAEL,QAAQA,MAAV,EAAkBwD,YAAY,KAAKjD,WAAnC,EAAhD,CAAX;AACA,IAFD,MAEO;AACN+C,eAAWzD,mBAAmB,IAAnB,GACR,IAAIkE,gCAAJ,CAAuC,KAAK1D,KAA5C,EAAmD,EAAEL,QAAQA,MAAV,EAAkBwD,YAAY,KAAKjD,WAAnC,EAAnD,CADQ,GAER,IAAIxB,gCAAJ,CAA4B,KAAKsB,KAAjC,EAAwC,EAAEL,QAAQA,MAAV,EAAkBwD,YAAY,KAAKjD,WAAnC,EAAxC,CAFH;AAGA;;AAED,QAAKQ,sBAAL,CAA4B6C,OAA5B,CAAqC,iBAA4B;AAAA,QAAxBX,IAAwB,SAAxBA,IAAwB;AAAA,QAAlBY,UAAkB,SAAlBA,UAAkB;;AAChE,QAAK,2BAAaP,SAASI,aAAT,CAAwBT,IAAxB,CAAb,CAAL,EAAqD;AACpDK,cAASK,aAAT,CAAwBV,IAAxB,EAA8BY,UAA9B;AACA;AACD,IAJD;;AAMA,UAAOP,QAAP;AACA;;AAED;;;;;;;;;;;;uBASMhB,I,EAAMC,E,EAAmB;AAAA,OAAfC,OAAe,uEAAL,EAAK;;AAC9BnD,UAAOsD,KAAP,CAAc,6BAAd,EAA6CL,IAA7C,EAAmDC,EAAnD,EAAuDC,OAAvD;;AAEAA,aAAUC,sBAAYuB,SAAZ,CAAuBxB,OAAvB,CAAV;;AAEA,QAAK/C,MAAL,CAAYwE,WAAZ,CAAyB;AACxB3B,cADwB;AAExBC,UAFwB;AAGxBC;AAHwB,IAAzB;AAKA;;AAED;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;;;;;;6BAkBYD,E,EAAI2B,a,EAAgB;AAAA;;AAC/B,OAAMC,SAAS5E,kBAAkB6E,qBAAlB,CAAyCF,aAAzC,EAAwD,KAAK1D,gBAA7D,EAA+E,KAAKC,YAApF,CAAf;;AAEA,OAAK,mBAAKyD,aAAL,EAAoB,cAApB,CAAL,EAA4C;AAC3C,SAAK7D,KAAL,GAAad,kBAAkBe,UAAlB,CAA8B4D,cAAcG,YAA5C,CAAb;AACA,WAAOH,cAAcG,YAArB;AACA;;AAED,OAAK,mBAAKH,aAAL,EAAoB,cAApB,CAAL,EAA4C;AAC3C,2BAASA,cAAcI,YAAvB,EAAqC,UAAEjC,IAAF,EAAQkC,QAAR,EAAsB;AAC1D,WAAKhE,WAAL,CAAiBiE,eAAjB,CAAkCD,QAAlC,EAA4ClC,IAA5C;AACA,KAFD;AAGA,WAAO6B,cAAcI,YAArB;AACA;;AAED,OAAK,mBAAKJ,aAAL,EAAoB,oBAApB,CAAL,EAAkD;AACjD,2CAAsB,EAAEO,QAAQP,cAAcQ,kBAAxB,EAAtB;AACA,WAAOR,cAAcQ,kBAArB;AACA;;AAED,OAAK,mBAAKR,aAAL,EAAoB,UAApB,CAAL,EAAwC;AACvC7E,WAAOsF,QAAP,CAAiBT,cAAcU,QAA/B,EAAyC,KAAzC;AACA,WAAOV,cAAcU,QAArB;AACA;;AAED,QAAKlF,cAAL,GAAsB,qBAAO,KAAKA,cAAZ,EAA4BwE,aAA5B,CAAtB;;AAEA,OAAKC,OAAOvD,WAAZ,EAA0B;AACzB,SAAKJ,gBAAL,GAAwB,KAAKqE,qBAAL,EAAxB;AACA;AACD,OAAKV,OAAOhF,GAAZ,EAAkB;AACjB,SAAKsB,YAAL,GAAoB,KAAKqE,iBAAL,EAApB;AACA,SAAKpE,uBAAL,GAA+B,KAAKqE,6BAAL,EAA/B;AACA;;AAED;AACA,QAAKtD,UAAL;;AAEA,QAAKuD,IAAL,CAAW,iBAAX,EAA8BzC,EAA9B;AACA;;AAED;;;;;;;;;;;;qCASoBU,I,EAAMY,U,EAAYoB,U,EAAa;AAClD,OAAK,CAAE,wBAAUhC,IAAV,CAAP,EAA0B;AACzB,UAAM,IAAIiC,qBAAJ,CAAsB,8CAA8CD,UAA9C,GAA2D,6CAAjF,CAAN;AACA;;AAED,OAAK,CAAE,wBAAUpB,UAAV,CAAP,EAAgC;AAC/B,UAAM,IAAIqB,qBAAJ,CAAsB,8CAA8CD,UAA9C,GAC3B,qDADK,CAAN;AAEA;;AAED,OAAK,CAAE,wBAAUA,UAAV,CAAP,EAAgC;AAC/B,UAAM,IAAIC,qBAAJ,CAAsB,8CAA8CD,UAA9C,GAC3B,mDADK,CAAN;AAEA;;AAED;AACA,OAAME,eAAeF,aAAa,GAAb,GAAmBhC,IAAxC;;AAEA,OAAK,KAAKxC,YAAL,KAAsB,IAA3B,EAAkC;AACjC,SAAKA,YAAL,CAAkBkD,aAAlB,CAAiCwB,YAAjC,EAA+CtB,UAA/C;AACA;AACD,QAAK9C,sBAAL,CAA4BqE,IAA5B,CAAkC,EAAED,0BAAF,EAAgBtB,sBAAhB,EAAlC;;AAEA,QAAK/B,iBAAL,CAAwBmB,IAAxB,EAA8BgC,UAA9B;;AAEA,UAAO,IAAP;AACA;;AAED;;;;;;;;;;;;yCASwBhC,I,EAAMoC,O,EAASJ,U,EAAa;AACnD,OAAK,CAAE,wBAAUhC,IAAV,CAAP,EAA0B;AACzB,UAAM,IAAIiC,qBAAJ,CAAsB,2CAA2CD,UAA3C,GAAwD,6CAA9E,CAAN;AACA;;AAED,OAAK,CAAE,wBAAUI,OAAV,CAAP,EAA6B;AAC5B,UAAM,IAAIH,qBAAJ,CAAsB,2CAA2CD,UAA3C,GAC3B,kDADK,CAAN;AAEA;;AAED,OAAK,CAAE,wBAAUA,UAAV,CAAP,EAAgC;AAC/B,UAAM,IAAIC,qBAAJ,CAAsB,2CAA2CD,UAA3C,GAC3B,mDADK,CAAN;AAEA;;AAED;AACAhC,UAAOgC,aAAa,GAAb,GAAmBhC,IAA1B;;AAEA,QAAKjC,0BAAL,CAAiCiC,IAAjC,IAA0CoC,OAA1C;AACA;;AAED;;;;;;;;;;;;;;oCAWmBpC,I,EAAMgC,U,EAAa;AACrC,OAAK,CAAE,wBAAUhC,IAAV,CAAP,EAA0B;AACzB,UAAM,IAAIiC,qBAAJ,CAAsB,6CAA6CD,UAA7C,GAA0D,6CAAhF,CAAN;AACA;;AAED,OAAK,CAAE,wBAAUA,UAAV,CAAP,EAAgC;AAC/B,UAAM,IAAIC,qBAAJ,CAAsB,6CAA6CD,UAA7C,GAC3B,mDADK,CAAN;AAEA;;AAED,QAAKxD,UAAL;AACA;;AAED;;;;;;;;+BAKa;AACZ,QAAKtB,MAAL,GAAc,IAAd;AACA;;AAED;;;;;;;;;;;;;;4BAWWH,M,EAAS;AACnB,OAAK,KAAKN,cAAL,CAAoBM,MAApB,KAA+BA,MAApC,EAA6C;AAC5C;AACA;AACD,QAAKN,cAAL,CAAoBM,MAApB,GAA6BA,MAA7B;AACA,QAAKQ,gBAAL,GAAwB,KAAKqE,qBAAL,EAAxB;AACA;;AAED;;;;;;;;;;0CAOyBS,K,EAAQ;AAChC,OAAK,KAAKnF,MAAL,KAAgB,IAArB,EAA4B;AAC3B,WAAO,IAAP;AACA;;AAED,OAAK,KAAKA,MAAL,CAAYoF,OAAZ,OAA0BD,MAAMC,OAAN,EAA/B,EAAiD;AAChD,WAAO,IAAP;AACA;;AAED,UAAO,KAAKpF,MAAL,CAAYqF,SAAZ,OAA4BF,MAAME,SAAN,EAAnC;AACA;;AAED;;;;;;;;;;;;;kCAUiBC,G,SAA6B;AAAA,OAAtBC,OAAsB,SAAtBA,OAAsB;AAAA,OAAbC,QAAa,SAAbA,QAAa;;AAC7C,OAAK,2BAAa,KAAKvF,gBAAL,CAAuBqF,GAAvB,CAAb,CAAL,EAAmD;AAClD,WAAO,IAAP;AACA;;AAED,OAAK,KAAKrF,gBAAL,CAAuBqF,GAAvB,EAA6BC,OAA7B,KAAyCA,OAA9C,EAAwD;AACvD,WAAO,IAAP;AACA;;AAED,UAAO,KAAKtF,gBAAL,CAAuBqF,GAAvB,EAA6BE,QAA7B,KAA0CA,QAAjD;AACA;;AAED;;;;;;;;;;;;;;;;;;0BAeSpD,E,SAAsC;AAAA;;AAAA,OAAhC+C,KAAgC,SAAhCA,KAAgC;AAAA,qCAAzBM,eAAyB;AAAA,OAAzBA,eAAyB,yCAAP,EAAO;;AAC9C;AACAN,SAAMO,KAAN,GAAc,kBAAOP,MAAMO,KAAb,CAAd;AACAP,SAAMO,KAAN,GAAc1H,OAAO2H,gBAAP,CAAyBR,MAAMO,KAA/B,CAAd;AACA,OAAME,kBAAkB,KAAK5F,MAAL,KAAgB,IAAhB,IAAwB,CAAE,KAAKA,MAAL,CAAY6F,MAAZ,CAAoBV,KAApB,CAAlD;AACA,OAAMW,0BAA0B,KAAKA,uBAAL,CAA8BX,KAA9B,CAAhC;;AAEA,OAAKS,eAAL,EAAuB;AACtB,SAAK5F,MAAL,GAAcmF,KAAd;AACA,SAAK/E,WAAL,CAAiB2F,QAAjB,CAA2B,KAAK/F,MAAhC;;AAEA;AACA,SAAKgG,SAAL,CAAgB,KAAKhG,MAAL,CAAYqF,SAAZ,EAAhB;AACA;;AAED,OAAK,KAAK9F,cAAL,CAAoBE,qBAApB,IAA6C,KAAKa,YAAvD,EAAsE;AACrE,QAAKsF,eAAL,EAAuB;AACtB,UAAKtF,YAAL,CAAkB2F,MAAlB,CAA0B,KAAKjG,MAA/B;;AAEA;AACA,UAAKQ,QAAL,CAAcxB,GAAd,GAAoB,EAApB;AACA,UAAKwB,QAAL,CAAcxB,GAAd,CAAmB,EAAnB,IAA0B;AACzB0B,eAAS,KAAKJ,YAAL,CAAkBI,OADF;AAEzBC,aAAO,KAAKL,YAAL,CAAkB4F,qBAAlB;AAFkB,MAA1B;AAIA;;AAED;AACA,QAAMC,8BAA8B,CAAE,EAAF,CAApC;AACA,2BAASV,eAAT,EAA0B,UAAEW,cAAF,EAAkBd,GAAlB,EAA2B;AACpDa,iCAA4BlB,IAA5B,CAAkCK,GAAlC;;AAEA,YAAKrF,gBAAL,CAAuBqF,GAAvB,IAA+Bc,cAA/B;;AAEA,SAAMC,eAAexH,gBAAM0D,KAAN,cACjB,OAAKvC,MAAL,CAAY6D,SAAZ,EADiB;AAEpB0B,eAAS,OAAKtF,gBAAL,CAAuBqF,GAAvB,EAA6BC,OAFlB;AAGpBC,gBAAU,OAAKvF,gBAAL,CAAuBqF,GAAvB,EAA6BE;AAHnB,QAArB;;AAMA,YAAKjF,uBAAL,CAA6B0F,MAA7B,CAAqCI,YAArC;;AAEA,YAAK7F,QAAL,CAAcxB,GAAd,CAAmBsG,GAAnB,IAA2B;AAC1B5E,eAAS,OAAKH,uBAAL,CAA6BG,OADZ;AAE1BC,aAAO,OAAKJ,uBAAL,CAA6B2F,qBAA7B;AAFmB,MAA3B;AAIA,KAjBD;;AAmBA;AACA,QAAKC,4BAA4BG,MAA5B,GAAqC,CAA1C,EAA8C;AAC7C,UAAK9F,QAAL,CAAcxB,GAAd,GAAoB,sBAAQ,KAAKwB,QAAL,CAAcxB,GAAtB,EAA2B,UAAEoH,cAAF,EAAkBd,GAAlB;AAAA,aAA2B,wBAAUa,2BAAV,EAAuCb,GAAvC,CAA3B;AAAA,MAA3B,CAApB;AACA;AACD;;AAED,OAAK,KAAK/F,cAAL,CAAoBC,qBAApB,IAA6C,KAAKa,gBAAlD,IAAsEyF,uBAA3E,EAAqG;AACpG,SAAKzF,gBAAL,CAAsB4F,MAAtB,CAA8B,KAAKjG,MAAnC;;AAEA,SAAKQ,QAAL,CAAcC,WAAd,GAA4B;AAC3BC,cAAS,KAAKL,gBAAL,CAAsBK,OADJ;AAE3BC,YAAO,KAAKN,gBAAL,CAAsB6F,qBAAtB;AAFoB,KAA5B;AAIA;;AAED,UAAO,KAAK1F,QAAZ;AACA;;AAED;;;;;;;;;;;6BAQY4B,E,SAAc;AAAA,OAARmE,GAAQ,SAARA,GAAQ;;AACzB,OAAK,2BAAaA,GAAb,CAAL,EAA0B;AACzB,WAAO,EAAEC,QAAQ,KAAV,EAAiBD,QAAjB,EAAsBE,SAAS,wCAA/B,EAAP;AACA;;AAED,OAAI;AACH,SAAKnH,MAAL,CAAYoH,aAAZ,CAA2BH,GAA3B;AACA,IAFD,CAEE,OAAQxD,KAAR,EAAgB;AACjB,WAAO,EAAEyD,QAAQ,KAAV,EAAiBD,QAAjB,EAAsBE,SAAS1D,MAAM0D,OAArC,EAAP;AACA;;AAED,UAAO,EAAED,QAAQ,IAAV,EAAgBD,QAAhB,EAAP;AACA;;AAED;;;;;;;;;;;iCAQgBnE,E,EAAIuE,M,EAAS;AAC5B,OAAK,CAAEA,OAAOH,MAAd,EAAuB;AACtB,SAAK3B,IAAL,CAAW,mBAAX,EAAgCzC,EAAhC,EAAoCuE,MAApC;AACA;AACA;;AAED,QAAK9B,IAAL,CAAW,iBAAX,EAA8BzC,EAA9B,EAAkCuE,MAAlC;AACA;;AAED;;;;;;;;;;;8BAQavE,E,EAAIuE,M,EAAS;AACzB,OAAKA,OAAO5D,KAAZ,EAAoB;AACnB,SAAK8B,IAAL,CAAW,gBAAX,EAA6BzC,EAA7B,EAAiCuE,MAAjC;AACA;AACA;AACD,QAAK9B,IAAL,CAAW,cAAX,EAA2BzC,EAA3B,EAA+BuE,MAA/B;AACA;;AAED;;;;;;;;;;;6CAQ4BvE,E,EAAIuE,M,EAAS;AACxC,OAAKA,OAAO5D,KAAZ,EAAoB;AACnB,SAAK8B,IAAL,CAAW,+BAAX,EAA4CzC,EAA5C,EAAgDuE,MAAhD;AACA;AACA;AACD,QAAK9B,IAAL,CAAW,6BAAX,EAA0CzC,EAA1C,EAA8CuE,MAA9C;AACA;;AAED;;;;;;;;;;;;gCASevE,E,SAAqB;AAAA,OAAfU,IAAe,SAAfA,IAAe;AAAA,OAATZ,IAAS,SAATA,IAAS;;AACnC,OAAI;AACH,WAAO;AACN0E,cAAS,IADH;AAEN1E,WAAM,KAAKrB,0BAAL,CAAiCiC,IAAjC,EAAyCZ,IAAzC;AAFA,KAAP;AAIA,IALD,CAKE,OAAQa,KAAR,EAAgB;AACjB,WAAO,EAAEA,YAAF,EAAP;AACA;AACD;;AAED;;;;;;;;;;;oCAQmBX,E,EAAIuE,M,EAAS;AAC/B,OAAKA,OAAOC,OAAZ,EAAsB;AACrB,SAAK/B,IAAL,CAAW,oBAAX,EAAiCzC,EAAjC,EAAqCuE,OAAOzE,IAA5C;AACA;AACA;AACD,QAAK2C,IAAL,CAAW,sBAAX,EAAmC8B,OAAO5D,KAA1C;AACA;;AAED;;;;;;;;;;;;;8BAUaX,E,SAA6B;AAAA,OAAvBU,IAAuB,SAAvBA,IAAuB;AAAA,2BAAjBqC,KAAiB;AAAA,OAAjBA,KAAiB,+BAAT,IAAS;;AACzC;AACA,OAAM0B,iBAAiB,KAAKzG,WAAL,CAAiB0G,OAAjB,CAA0B,YAA1B,CAAvB;;AAEA,OAAIzD,aAAa,KAAKjD,WAAtB;AACA;AACA,OAAK+E,UAAU,IAAf,EAAsB;AACrB9B,iBAAa,IAAI3E,oBAAJ,CAAgByG,KAAhB,CAAb;AACA9B,eAAWgB,eAAX,CAA4B,YAA5B,EAA0CwC,cAA1C;AACA;;AAED,UAAOxD,WAAW0D,WAAX,CAAwBjE,IAAxB,CAAP;AACA;;AAED;;;;;;;;;;;kCAQiBV,E,EAAIuE,M,EAAS;AAC7B,OAAKA,OAAO5D,KAAZ,EAAoB;AACnB,SAAK8B,IAAL,CAAW,oBAAX,EAAiCzC,EAAjC,EAAqCuE,MAArC;AACA;AACA;AACD,QAAK9B,IAAL,CAAW,kBAAX,EAA+BzC,EAA/B,EAAmCuE,MAAnC;AACA;;;6BAhmBkBzC,Y,EAAe;AACjC;AACAA,kBAAeA,gBAAgB;AAC9B8C,YAAQ,kBADsB;AAE9B;AACAC,iBAAa;AACZ,yBAAoB;AACnB,UAAI;AADe;AADR;AAHiB,IAA/B;;AAUA,UAAO,IAAIC,aAAJ,CAAShD,YAAT,CAAP;AACA;;;wCA2I6BH,a,EAA4D;AAAA,OAA7CoD,eAA6C,uEAA3B,IAA2B;AAAA,OAArBC,WAAqB,uEAAP,IAAO;;AACzF,OAAM3G,cAAc,CAAE,uBAAF,EAA2B,gBAA3B,EAA6C,QAA7C,EAAuD,cAAvD,CAApB;AACA,OAAMzB,MAAM,CAAE,uBAAF,EAA2B,gBAA3B,EAA6C,aAA7C,EAA4D,wBAA5D,EAAsF,QAAtF,EAAgG,cAAhG,EAAgH,cAAhH,CAAZ;AACA,OAAMqI,oBAAoBC,OAAOC,IAAP,CAAaxD,aAAb,CAA1B;;AAEA,UAAO;AACNtD,iBAAa,sBAAQ0G,eAAR,KAA6B,2BAAaE,iBAAb,EAAgC5G,WAAhC,CADpC;AAENzB,SAAK,sBAAQoI,WAAR,KAAyB,2BAAaC,iBAAb,EAAgCrI,GAAhC;AAFxB,IAAP;AAIA;;;;;;kBAnWmBI,iB","file":"AnalysisWebWorker.js","sourcesContent":["// External dependencies.\nimport { autop } from \"@wordpress/autop\";\nimport Jed from \"jed\";\nimport { forEach, has, includes, isNull, isObject, isString, isUndefined, merge, pickBy } from \"lodash-es\";\nimport { getLogger } from \"loglevel\";\n\n// YoastSEO.js dependencies.\nimport * as assessments from \"../assessments\";\nimport * as bundledPlugins from \"../bundledPlugins\";\nimport * as helpers from \"../helpers\";\nimport * as markers from \"../markers\";\nimport * as string from \"../stringProcessing\";\nimport * as interpreters from \"../interpreters\";\nimport * as config from \"../config\";\n\nimport Assessor from \"../assessor\";\nimport Assessment from \"../assessment\";\nimport SEOAssessor from \"../seoAssessor\";\nimport ContentAssessor from \"../contentAssessor\";\nimport TaxonomyAssessor from \"../taxonomyAssessor\";\nimport Pluggable from \"../pluggable\";\nimport Researcher from \"../researcher\";\nimport SnippetPreview from \"../snippetPreview\";\nimport Paper from \"../values/Paper\";\nimport AssessmentResult from \"../values/AssessmentResult\";\nimport RelatedKeywordAssessor from \"../relatedKeywordAssessor\";\n\nconst YoastSEO = {\n\tAssessor,\n\tAssessment,\n\tSEOAssessor,\n\tContentAssessor,\n\tTaxonomyAssessor,\n\tPluggable,\n\tResearcher,\n\tSnippetPreview,\n\tRelatedKeywordAssessor,\n\n\tPaper,\n\tAssessmentResult,\n\n\tassessments,\n\tbundledPlugins,\n\thelpers,\n\tmarkers,\n\tstring,\n\tinterpreters,\n\tconfig,\n};\n\n// Internal dependencies.\nimport CornerstoneContentAssessor from \"../cornerstone/contentAssessor\";\nimport CornerstoneRelatedKeywordAssessor from \"../cornerstone/relatedKeywordAssessor\";\nimport CornerstoneSEOAssessor from \"../cornerstone/seoAssessor\";\nimport InvalidTypeError from \"../errors/invalidType\";\nimport includesAny from \"../helpers/includesAny\";\nimport { configureShortlinker } from \"../helpers/shortlinker\";\nimport RelatedKeywordTaxonomyAssessor from \"../relatedKeywordTaxonomyAssessor\";\nimport Scheduler from \"./scheduler\";\nimport Transporter from \"./transporter\";\nimport wrapTryCatchAroundAction from \"./wrapTryCatchAroundAction\";\n\n\nconst keyphraseDistribution = new assessments.seo.KeyphraseDistributionAssessment();\n\nconst logger = getLogger( \"yoast-analysis-worker\" );\nlogger.setDefaultLevel( \"error\" );\n\n/**\n * Analysis Web Worker.\n *\n * Worker API:     https://developer.mozilla.org/en-US/docs/Web/API/Worker\n * Webpack loader: https://github.com/webpack-contrib/worker-loader\n */\nexport default class AnalysisWebWorker {\n\t/**\n\t * Initializes the AnalysisWebWorker class.\n\t *\n\t * @param {Object} scope The scope for the messaging. Expected to have the\n\t *                       `onmessage` event and the `postMessage` function.\n\t */\n\tconstructor( scope ) {\n\t\tthis._scope = scope;\n\n\t\tthis._configuration = {\n\t\t\tcontentAnalysisActive: true,\n\t\t\tkeywordAnalysisActive: true,\n\t\t\tuseCornerstone: false,\n\t\t\tuseTaxonomy: false,\n\t\t\tuseKeywordDistribution: false,\n\t\t\t// The locale used for language-specific configurations in Flesch-reading ease and Sentence length assessments.\n\t\t\tlocale: \"en_US\",\n\t\t};\n\n\t\tthis._scheduler = new Scheduler();\n\n\t\tthis._paper = null;\n\t\tthis._relatedKeywords = {};\n\n\t\tthis._i18n = AnalysisWebWorker.createI18n();\n\t\tthis._researcher = new Researcher( this._paper );\n\n\t\tthis._contentAssessor = null;\n\t\tthis._seoAssessor = null;\n\t\tthis._relatedKeywordAssessor = null;\n\n\t\t/*\n\t\t * The cached analyses results.\n\t\t *\n\t\t * A single result has the following structure:\n\t\t * {AssessmentResult[]} readability.results An array of assessment results; in serialized format.\n\t\t * {number}             readability.score   The overall score.\n\t\t *\n\t\t * The results have the following structure.\n\t\t * {Object} readability Content assessor results.\n\t\t * {Object} seo         SEO assessor results, per keyword identifier or empty string for the main.\n\t\t * {Object} seo[ \"\" ]   The result of the paper analysis for the main keyword.\n\t\t * {Object} seo[ key ]  Same as above, but instead for a related keyword.\n\t\t */\n\t\tthis._results = {\n\t\t\treadability: {\n\t\t\t\tresults: [],\n\t\t\t\tscore: 0,\n\t\t\t},\n\t\t\tseo: {\n\t\t\t\t\"\": {\n\t\t\t\t\tresults: [],\n\t\t\t\t\tscore: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tthis._registeredAssessments = [];\n\t\tthis._registeredMessageHandlers = {};\n\n\t\t// Bind actions to this scope.\n\t\tthis.analyze = this.analyze.bind( this );\n\t\tthis.analyzeDone = this.analyzeDone.bind( this );\n\t\tthis.analyzeRelatedKeywordsDone = this.analyzeRelatedKeywordsDone.bind( this );\n\t\tthis.loadScript = this.loadScript.bind( this );\n\t\tthis.loadScriptDone = this.loadScriptDone.bind( this );\n\t\tthis.customMessage = this.customMessage.bind( this );\n\t\tthis.customMessageDone = this.customMessageDone.bind( this );\n\t\tthis.clearCache = this.clearCache.bind( this );\n\t\tthis.runResearch = this.runResearch.bind( this );\n\t\tthis.runResearchDone = this.runResearchDone.bind( this );\n\n\t\t// Bind register functions to this scope.\n\t\tthis.registerAssessment = this.registerAssessment.bind( this );\n\t\tthis.registerMessageHandler = this.registerMessageHandler.bind( this );\n\t\tthis.refreshAssessment = this.refreshAssessment.bind( this );\n\n\t\t// Bind event handlers to this scope.\n\t\tthis.handleMessage = this.handleMessage.bind( this );\n\n\t\t// Wrap try/catch around actions.\n\t\tthis.analyzeRelatedKeywords =\n\t\t\twrapTryCatchAroundAction( logger, this.analyze, \"An error occurred while running the related keywords analysis.\" );\n\t\t/*\n\t\t * Overwrite this.analyze after we use it in this.analyzeRelatedKeywords so that this.analyzeRelatedKeywords\n\t\t * doesn't use the overwritten version. Therefore, this order shouldn't be changed.\n\t\t */\n\t\tthis.analyze = wrapTryCatchAroundAction( logger, this.analyze, \"An error occurred while running the analysis.\" );\n\t\tthis.runResearch = wrapTryCatchAroundAction( logger, this.runResearch,\n\t\t\t\"An error occurred after running the '%%name%%' research.\" );\n\t}\n\n\t/**\n\t * Registers this web worker with the scope passed to it's constructor.\n\t *\n\t * @returns {void}\n\t */\n\tregister() {\n\t\tthis._scope.onmessage = this.handleMessage;\n\t\tthis._scope.analysisWorker = {\n\t\t\tregisterAssessment: this.registerAssessment,\n\t\t\tregisterMessageHandler: this.registerMessageHandler,\n\t\t\trefreshAssessment: this.refreshAssessment,\n\t\t};\n\t\tthis._scope.yoast = this._scope.yoast || {};\n\t\tthis._scope.yoast.analysis = YoastSEO;\n\t}\n\n\t/**\n\t * Receives the post message and determines the action.\n\t *\n\t * See: https://developer.mozilla.org/en-US/docs/Web/API/Worker/onmessage\n\t *\n\t * @param {MessageEvent} event              The post message event.\n\t * @param {Object}       event.data         The data object.\n\t * @param {string}       event.data.type    The action type.\n\t * @param {string}       event.data.id      The request id.\n\t * @param {string}       event.data.payload The payload of the action.\n\t *\n\t * @returns {void}\n\t */\n\thandleMessage( { data: { type, id, payload } } ) {\n\t\tpayload = Transporter.parse( payload );\n\n\t\tlogger.debug( \"AnalysisWebWorker incoming:\", type, id, payload );\n\n\t\tswitch ( type ) {\n\t\t\tcase \"initialize\":\n\t\t\t\tthis.initialize( id, payload );\n\t\t\t\tthis._scheduler.startPolling();\n\t\t\t\tbreak;\n\t\t\tcase \"analyze\":\n\t\t\t\tthis._scheduler.schedule( {\n\t\t\t\t\tid,\n\t\t\t\t\texecute: this.analyze,\n\t\t\t\t\tdone: this.analyzeDone,\n\t\t\t\t\tdata: payload,\n\t\t\t\t\ttype: type,\n\t\t\t\t} );\n\t\t\t\tbreak;\n\t\t\tcase \"analyzeRelatedKeywords\":\n\t\t\t\tthis._scheduler.schedule( {\n\t\t\t\t\tid,\n\t\t\t\t\texecute: this.analyzeRelatedKeywords,\n\t\t\t\t\tdone: this.analyzeRelatedKeywordsDone,\n\t\t\t\t\tdata: payload,\n\t\t\t\t\ttype: type,\n\t\t\t\t} );\n\t\t\t\tbreak;\n\t\t\tcase \"loadScript\":\n\t\t\t\tthis._scheduler.schedule( {\n\t\t\t\t\tid,\n\t\t\t\t\texecute: this.loadScript,\n\t\t\t\t\tdone: this.loadScriptDone,\n\t\t\t\t\tdata: payload,\n\t\t\t\t\ttype: type,\n\t\t\t\t} );\n\t\t\t\tbreak;\n\t\t\tcase \"runResearch\":\n\t\t\t\tthis._scheduler.schedule( {\n\t\t\t\t\tid,\n\t\t\t\t\texecute: this.runResearch,\n\t\t\t\t\tdone: this.runResearchDone,\n\t\t\t\t\tdata: payload,\n\t\t\t\t} );\n\t\t\t\tbreak;\n\t\t\tcase \"customMessage\": {\n\t\t\t\tconst name = payload.name;\n\t\t\t\tif ( name && this._registeredMessageHandlers[ name ] ) {\n\t\t\t\t\tthis._scheduler.schedule( {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\texecute: this.customMessage,\n\t\t\t\t\t\tdone: this.customMessageDone,\n\t\t\t\t\t\tdata: payload,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.customMessageDone( id, { error: new Error( \"No message handler registered for messages with name: \" + name ) } );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.warn( \"AnalysisWebWorker unrecognized action:\", type );\n\t\t}\n\t}\n\n\t/**\n\t * Initializes i18n object based on passed configuration.\n\t *\n\t * @param {Object} [translations] The translations to be used in the current\n\t *                                instance.\n\t *\n\t * @returns {Jed} Jed instance.\n\t */\n\tstatic createI18n( translations ) {\n\t\t// Use default object to prevent Jed from erroring out.\n\t\ttranslations = translations || {\n\t\t\tdomain: \"js-text-analysis\",\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tlocale_data: {\n\t\t\t\t\"js-text-analysis\": {\n\t\t\t\t\t\"\": {},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn new Jed( translations );\n\t}\n\n\t/**\n\t * Initializes the appropriate content assessor.\n\t *\n\t * @returns {null|ContentAssessor|CornerstoneContentAssessor} The chosen\n\t *                                                            content\n\t *                                                            assessor.\n\t */\n\tcreateContentAssessor() {\n\t\tconst {\n\t\t\tcontentAnalysisActive,\n\t\t\tuseCornerstone,\n\t\t\tlocale,\n\t\t} = this._configuration;\n\n\t\tif ( contentAnalysisActive === false ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst assessor = useCornerstone === true\n\t\t\t? new CornerstoneContentAssessor( this._i18n, { locale } )\n\t\t\t: new ContentAssessor( this._i18n, { locale } );\n\n\t\treturn assessor;\n\t}\n\n\t/**\n\t * Initializes the appropriate SEO assessor.\n\t *\n\t * @returns {null|SEOAssessor|CornerstoneSEOAssessor|TaxonomyAssessor} The chosen\n\t *                                                                     SEO\n\t *                                                                     assessor.\n\t */\n\tcreateSEOAssessor() {\n\t\tconst {\n\t\t\tkeywordAnalysisActive,\n\t\t\tuseCornerstone,\n\t\t\tuseKeywordDistribution,\n\t\t\tuseTaxonomy,\n\t\t\tlocale,\n\t\t} = this._configuration;\n\n\t\tif ( keywordAnalysisActive === false ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet assessor;\n\n\t\tif ( useTaxonomy === true ) {\n\t\t\tassessor = new TaxonomyAssessor( this._i18n, { locale: locale, researcher: this._researcher } );\n\t\t} else {\n\t\t\tassessor = useCornerstone === true\n\t\t\t\t? new CornerstoneSEOAssessor( this._i18n, { locale: locale, researcher: this._researcher } )\n\t\t\t\t: new SEOAssessor( this._i18n, { locale: locale, researcher: this._researcher } );\n\t\t}\n\n\n\t\tif ( useKeywordDistribution && isUndefined( assessor.getAssessment( \"keyphraseDistribution\" ) ) ) {\n\t\t\tassessor.addAssessment( \"keyphraseDistribution\", keyphraseDistribution );\n\t\t}\n\n\t\tthis._registeredAssessments.forEach( ( { name, assessment } ) => {\n\t\t\tif ( isUndefined( assessor.getAssessment( name ) ) ) {\n\t\t\t\tassessor.addAssessment( name, assessment );\n\t\t\t}\n\t\t} );\n\n\t\treturn assessor;\n\t}\n\n\t/**\n\t * Initializes the appropriate SEO assessor for related keywords.\n\t *\n\t * @returns {null|SEOAssessor|CornerstoneSEOAssessor|TaxonomyAssessor} The chosen\n\t *                                                                     related keywords\n\t *                                                                     assessor.\n\t */\n\tcreateRelatedKeywordsAssessor() {\n\t\tconst {\n\t\t\tkeywordAnalysisActive,\n\t\t\tuseCornerstone,\n\t\t\tuseTaxonomy,\n\t\t\tlocale,\n\t\t} = this._configuration;\n\n\t\tif ( keywordAnalysisActive === false ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet assessor;\n\n\t\tif ( useTaxonomy === true ) {\n\t\t\tassessor = new RelatedKeywordTaxonomyAssessor( this._i18n, { locale: locale, researcher: this._researcher } );\n\t\t} else {\n\t\t\tassessor = useCornerstone === true\n\t\t\t\t? new CornerstoneRelatedKeywordAssessor( this._i18n, { locale: locale, researcher: this._researcher } )\n\t\t\t\t: new RelatedKeywordAssessor( this._i18n, { locale: locale, researcher: this._researcher } );\n\t\t}\n\n\t\tthis._registeredAssessments.forEach( ( { name, assessment } ) => {\n\t\t\tif ( isUndefined( assessor.getAssessment( name ) ) ) {\n\t\t\t\tassessor.addAssessment( name, assessment );\n\t\t\t}\n\t\t} );\n\n\t\treturn assessor;\n\t}\n\n\t/**\n\t * Sends a message.\n\t *\n\t * @param {string} type      The message type.\n\t * @param {number} id        The request id.\n\t * @param {Object} [payload] The payload to deliver.\n\t *\n\t * @returns {void}\n\t */\n\tsend( type, id, payload = {} ) {\n\t\tlogger.debug( \"AnalysisWebWorker outgoing:\", type, id, payload );\n\n\t\tpayload = Transporter.serialize( payload );\n\n\t\tthis._scope.postMessage( {\n\t\t\ttype,\n\t\t\tid,\n\t\t\tpayload,\n\t\t} );\n\t}\n\n\t/**\n\t * Checks which assessors should update giving a configuration.\n\t *\n\t * @param {Object}   configuration          The configuration to check.\n\t * @param {Assessor} [contentAssessor=null] The content assessor.\n\t * @param {Assessor} [seoAssessor=null]     The SEO assessor.\n\t *\n\t * @returns {Object} Containing seo and readability with true or false.\n\t */\n\tstatic shouldAssessorsUpdate( configuration, contentAssessor = null, seoAssessor = null ) {\n\t\tconst readability = [ \"contentAnalysisActive\", \"useCornerstone\", \"locale\", \"translations\" ];\n\t\tconst seo = [ \"keywordAnalysisActive\", \"useCornerstone\", \"useTaxonomy\", \"useKeywordDistribution\", \"locale\", \"translations\", \"researchData\" ];\n\t\tconst configurationKeys = Object.keys( configuration );\n\n\t\treturn {\n\t\t\treadability: isNull( contentAssessor ) || includesAny( configurationKeys, readability ),\n\t\t\tseo: isNull( seoAssessor ) || includesAny( configurationKeys, seo ),\n\t\t};\n\t}\n\n\t/**\n\t * Configures the analysis worker.\n\t *\n\t * @param {number}  id                                     The request id.\n\t * @param {Object}  configuration                          The configuration object.\n\t * @param {boolean} [configuration.contentAnalysisActive]  Whether the content analysis is active.\n\t * @param {boolean} [configuration.keywordAnalysisActive]  Whether the keyword analysis is active.\n\t * @param {boolean} [configuration.useCornerstone]         Whether the paper is cornerstone or not.\n\t * @param {boolean} [configuration.useTaxonomy]            Whether the taxonomy assessor should be used.\n\t * @param {boolean} [configuration.useKeywordDistribution] Whether the keyphraseDistribution assessment should run.\n\t * @param {string}  [configuration.locale]                 The locale used in the seo assessor.\n\t * @param {Object}  [configuration.translations]           The translation strings.\n\t * @param {Object}  [configuration.researchData]           Extra research data.\n\t * @param {Object}  [configuration.defaultQueryParams]     The default query params for the Shortlinker.\n\t * @param {string}  [configuration.logLevel]               Log level, see: https://github.com/pimterry/loglevel#documentation\n\t *\n\t * @returns {void}\n\t */\n\tinitialize( id, configuration ) {\n\t\tconst update = AnalysisWebWorker.shouldAssessorsUpdate( configuration, this._contentAssessor, this._seoAssessor );\n\n\t\tif ( has( configuration, \"translations\" ) ) {\n\t\t\tthis._i18n = AnalysisWebWorker.createI18n( configuration.translations );\n\t\t\tdelete configuration.translations;\n\t\t}\n\n\t\tif ( has( configuration, \"researchData\" ) ) {\n\t\t\tforEach( configuration.researchData, ( data, research ) => {\n\t\t\t\tthis._researcher.addResearchData( research, data );\n\t\t\t} );\n\t\t\tdelete configuration.researchData;\n\t\t}\n\n\t\tif ( has( configuration, \"defaultQueryParams\" ) ) {\n\t\t\tconfigureShortlinker( { params: configuration.defaultQueryParams } );\n\t\t\tdelete configuration.defaultQueryParams;\n\t\t}\n\n\t\tif ( has( configuration, \"logLevel\" ) ) {\n\t\t\tlogger.setLevel( configuration.logLevel, false );\n\t\t\tdelete configuration.logLevel;\n\t\t}\n\n\t\tthis._configuration = merge( this._configuration, configuration );\n\n\t\tif ( update.readability ) {\n\t\t\tthis._contentAssessor = this.createContentAssessor();\n\t\t}\n\t\tif ( update.seo ) {\n\t\t\tthis._seoAssessor = this.createSEOAssessor();\n\t\t\tthis._relatedKeywordAssessor = this.createRelatedKeywordsAssessor();\n\t\t}\n\n\t\t// Reset the paper in order to not use the cached results on analyze.\n\t\tthis.clearCache();\n\n\t\tthis.send( \"initialize:done\", id );\n\t}\n\n\t/**\n\t * Register an assessment for a specific plugin.\n\t *\n\t * @param {string}   name       The name of the assessment.\n\t * @param {function} assessment The function to run as an assessment.\n\t * @param {string}   pluginName The name of the plugin associated with the assessment.\n\t *\n\t * @returns {boolean} Whether registering the assessment was successful.\n\t */\n\tregisterAssessment( name, assessment, pluginName ) {\n\t\tif ( ! isString( name ) ) {\n\t\t\tthrow new InvalidTypeError( \"Failed to register assessment for plugin \" + pluginName + \". Expected parameter `name` to be a string.\" );\n\t\t}\n\n\t\tif ( ! isObject( assessment ) ) {\n\t\t\tthrow new InvalidTypeError( \"Failed to register assessment for plugin \" + pluginName +\n\t\t\t\t\". Expected parameter `assessment` to be a function.\" );\n\t\t}\n\n\t\tif ( ! isString( pluginName ) ) {\n\t\t\tthrow new InvalidTypeError( \"Failed to register assessment for plugin \" + pluginName +\n\t\t\t\t\". Expected parameter `pluginName` to be a string.\" );\n\t\t}\n\n\t\t// Prefix the name with the pluginName so the test name is always unique.\n\t\tconst combinedName = pluginName + \"-\" + name;\n\n\t\tif ( this._seoAssessor !== null ) {\n\t\t\tthis._seoAssessor.addAssessment( combinedName, assessment );\n\t\t}\n\t\tthis._registeredAssessments.push( { combinedName, assessment } );\n\n\t\tthis.refreshAssessment( name, pluginName );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Register a message handler for a specific plugin.\n\t *\n\t * @param {string}   name       The name of the message handler.\n\t * @param {function} handler    The function to run as an message handler.\n\t * @param {string}   pluginName The name of the plugin associated with the message handler.\n\t *\n\t * @returns {boolean} Whether registering the message handler was successful.\n\t */\n\tregisterMessageHandler( name, handler, pluginName ) {\n\t\tif ( ! isString( name ) ) {\n\t\t\tthrow new InvalidTypeError( \"Failed to register handler for plugin \" + pluginName + \". Expected parameter `name` to be a string.\" );\n\t\t}\n\n\t\tif ( ! isObject( handler ) ) {\n\t\t\tthrow new InvalidTypeError( \"Failed to register handler for plugin \" + pluginName +\n\t\t\t\t\". Expected parameter `handler` to be a function.\" );\n\t\t}\n\n\t\tif ( ! isString( pluginName ) ) {\n\t\t\tthrow new InvalidTypeError( \"Failed to register handler for plugin \" + pluginName +\n\t\t\t\t\". Expected parameter `pluginName` to be a string.\" );\n\t\t}\n\n\t\t// Prefix the name with the pluginName so the test name is always unique.\n\t\tname = pluginName + \"-\" + name;\n\n\t\tthis._registeredMessageHandlers[ name ] = handler;\n\t}\n\n\t/**\n\t * Refreshes an assessment in the analysis.\n\t *\n\t * Custom assessments can use this to mark their assessment as needing a\n\t * refresh.\n\t *\n\t * @param {string} name The name of the assessment.\n\t * @param {string} pluginName The name of the plugin associated with the assessment.\n\t *\n\t * @returns {boolean} Whether refreshing the assessment was successful.\n\t */\n\trefreshAssessment( name, pluginName ) {\n\t\tif ( ! isString( name ) ) {\n\t\t\tthrow new InvalidTypeError( \"Failed to refresh assessment for plugin \" + pluginName + \". Expected parameter `name` to be a string.\" );\n\t\t}\n\n\t\tif ( ! isString( pluginName ) ) {\n\t\t\tthrow new InvalidTypeError( \"Failed to refresh assessment for plugin \" + pluginName +\n\t\t\t\t\". Expected parameter `pluginName` to be a string.\" );\n\t\t}\n\n\t\tthis.clearCache();\n\t}\n\n\t/**\n\t * Clears the worker cache to force a new analysis.\n\t *\n\t * @returns {void}\n\t */\n\tclearCache() {\n\t\tthis._paper = null;\n\t}\n\n\t/**\n\t * Changes the locale in the configuration.\n\t *\n\t * If the locale is different:\n\t * - Update the configuration locale.\n\t * - Create the content assessor.\n\t *\n\t * @param {string} locale The locale to set.\n\t *\n\t * @returns {void}\n\t */\n\tsetLocale( locale ) {\n\t\tif ( this._configuration.locale === locale ) {\n\t\t\treturn;\n\t\t}\n\t\tthis._configuration.locale = locale;\n\t\tthis._contentAssessor = this.createContentAssessor();\n\t}\n\n\t/**\n\t * Checks if the paper contains changes that are used for readability.\n\t *\n\t * @param {Paper} paper The paper to check against the cached paper.\n\t *\n\t * @returns {boolean} True if there are changes detected.\n\t */\n\tshouldReadabilityUpdate( paper ) {\n\t\tif ( this._paper === null ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( this._paper.getText() !== paper.getText() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this._paper.getLocale() !== paper.getLocale();\n\t}\n\n\t/**\n\t * Checks if the related keyword contains changes that are used for seo.\n\t *\n\t * @param {string} key                     The identifier of the related keyword.\n\t * @param {Object} relatedKeyword          The related keyword object.\n\t * @param {string} relatedKeyword.keyword  The keyword.\n\t * @param {string} relatedKeyword.synonyms The synonyms.\n\t *\n\t * @returns {boolean} True if there are changes detected.\n\t */\n\tshouldSeoUpdate( key, { keyword, synonyms } ) {\n\t\tif ( isUndefined( this._relatedKeywords[ key ] ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( this._relatedKeywords[ key ].keyword !== keyword ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this._relatedKeywords[ key ].synonyms !== synonyms;\n\t}\n\n\t/**\n\t * Runs analyses on a paper.\n\t *\n\t * The paper includes the keyword and synonyms data. However, this is\n\t * possibly just one instance of these. From here we are going to split up\n\t * this data and keep track of the different sets of keyword-synonyms and\n\t * their results.\n\t *\n\t * @param {number} id                        The request id.\n\t * @param {Object} payload                   The payload object.\n\t * @param {Object} payload.paper             The paper to analyze.\n\t * @param {Object} [payload.relatedKeywords] The related keywords.\n\t *\n\t * @returns {Object} The result, may not contain readability or seo.\n\t */\n\tanalyze( id, { paper, relatedKeywords = {} } ) {\n\t\t// Automatically add paragraph tags, like Wordpress does, on blocks padded by double newlines or html elements.\n\t\tpaper._text = autop( paper._text );\n\t\tpaper._text = string.removeHtmlBlocks( paper._text );\n\t\tconst paperHasChanges = this._paper === null || ! this._paper.equals( paper );\n\t\tconst shouldReadabilityUpdate = this.shouldReadabilityUpdate( paper );\n\n\t\tif ( paperHasChanges ) {\n\t\t\tthis._paper = paper;\n\t\t\tthis._researcher.setPaper( this._paper );\n\n\t\t\t// Update the configuration locale to the paper locale.\n\t\t\tthis.setLocale( this._paper.getLocale() );\n\t\t}\n\n\t\tif ( this._configuration.keywordAnalysisActive && this._seoAssessor ) {\n\t\t\tif ( paperHasChanges ) {\n\t\t\t\tthis._seoAssessor.assess( this._paper );\n\n\t\t\t\t// Reset the cached results for the related keywords here too.\n\t\t\t\tthis._results.seo = {};\n\t\t\t\tthis._results.seo[ \"\" ] = {\n\t\t\t\t\tresults: this._seoAssessor.results,\n\t\t\t\t\tscore: this._seoAssessor.calculateOverallScore(),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Start an analysis for every related keyword.\n\t\t\tconst requestedRelatedKeywordKeys = [ \"\" ];\n\t\t\tforEach( relatedKeywords, ( relatedKeyword, key ) => {\n\t\t\t\trequestedRelatedKeywordKeys.push( key );\n\n\t\t\t\tthis._relatedKeywords[ key ] = relatedKeyword;\n\n\t\t\t\tconst relatedPaper = Paper.parse( {\n\t\t\t\t\t...this._paper.serialize(),\n\t\t\t\t\tkeyword: this._relatedKeywords[ key ].keyword,\n\t\t\t\t\tsynonyms: this._relatedKeywords[ key ].synonyms,\n\t\t\t\t} );\n\n\t\t\t\tthis._relatedKeywordAssessor.assess( relatedPaper );\n\n\t\t\t\tthis._results.seo[ key ] = {\n\t\t\t\t\tresults: this._relatedKeywordAssessor.results,\n\t\t\t\t\tscore: this._relatedKeywordAssessor.calculateOverallScore(),\n\t\t\t\t};\n\t\t\t} );\n\n\t\t\t// Clear the unrequested results, but only if there are requested related keywords.\n\t\t\tif ( requestedRelatedKeywordKeys.length > 1 ) {\n\t\t\t\tthis._results.seo = pickBy( this._results.seo, ( relatedKeyword, key ) => includes( requestedRelatedKeywordKeys, key ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( this._configuration.contentAnalysisActive && this._contentAssessor && shouldReadabilityUpdate ) {\n\t\t\tthis._contentAssessor.assess( this._paper );\n\n\t\t\tthis._results.readability = {\n\t\t\t\tresults: this._contentAssessor.results,\n\t\t\t\tscore: this._contentAssessor.calculateOverallScore(),\n\t\t\t};\n\t\t}\n\n\t\treturn this._results;\n\t}\n\n\t/**\n\t * Loads a new script from an external source.\n\t *\n\t * @param {number} id  The request id.\n\t * @param {string} url The url of the script to load;\n\t *\n\t * @returns {Object} An object containing whether or not the url was loaded, the url and possibly an error message.\n\t */\n\tloadScript( id, { url } ) {\n\t\tif ( isUndefined( url ) ) {\n\t\t\treturn { loaded: false, url, message: \"Load Script was called without an URL.\" };\n\t\t}\n\n\t\ttry {\n\t\t\tthis._scope.importScripts( url );\n\t\t} catch ( error ) {\n\t\t\treturn { loaded: false, url, message: error.message };\n\t\t}\n\n\t\treturn { loaded: true, url };\n\t}\n\n\t/**\n\t * Sends the load script result back.\n\t *\n\t * @param {number} id     The request id.\n\t * @param {Object} result The result.\n\t *\n\t * @returns {void}\n\t */\n\tloadScriptDone( id, result ) {\n\t\tif ( ! result.loaded ) {\n\t\t\tthis.send( \"loadScript:failed\", id, result );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.send( \"loadScript:done\", id, result );\n\t}\n\n\t/**\n\t * Sends the analyze result back.\n\t *\n\t * @param {number} id     The request id.\n\t * @param {Object} result The result.\n\t *\n\t * @returns {void}\n\t */\n\tanalyzeDone( id, result ) {\n\t\tif ( result.error ) {\n\t\t\tthis.send( \"analyze:failed\", id, result );\n\t\t\treturn;\n\t\t}\n\t\tthis.send( \"analyze:done\", id, result );\n\t}\n\n\t/**\n\t * Sends the analyze related keywords result back.\n\t *\n\t * @param {number} id     The request id.\n\t * @param {Object} result The result.\n\t *\n\t * @returns {void}\n\t */\n\tanalyzeRelatedKeywordsDone( id, result ) {\n\t\tif ( result.error ) {\n\t\t\tthis.send( \"analyzeRelatedKeywords:failed\", id, result );\n\t\t\treturn;\n\t\t}\n\t\tthis.send( \"analyzeRelatedKeywords:done\", id, result );\n\t}\n\n\t/**\n\t * Handle a custom message using the registered handler.\n\t *\n\t * @param {number} id   The request id.\n\t * @param {string} name The name of the message.\n\t * @param {Object} data The data of the message.\n\t *\n\t * @returns {Object} An object containing either success and data or an error.\n\t */\n\tcustomMessage( id, { name, data } ) {\n\t\ttry {\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\tdata: this._registeredMessageHandlers[ name ]( data ),\n\t\t\t};\n\t\t} catch ( error ) {\n\t\t\treturn { error };\n\t\t}\n\t}\n\n\t/**\n\t * Send the result of a custom message back.\n\t *\n\t * @param {number} id     The request id.\n\t * @param {Object} result The result.\n\t *\n\t * @returns {void}\n\t */\n\tcustomMessageDone( id, result ) {\n\t\tif ( result.success ) {\n\t\t\tthis.send( \"customMessage:done\", id, result.data );\n\t\t\treturn;\n\t\t}\n\t\tthis.send( \"customMessage:failed\", result.error );\n\t}\n\n\t/**\n\t * Runs the specified research in the worker. Optionally pass a paper.\n\t *\n\t * @param {number} id     The request id.\n\t * @param {string} name   The name of the research to run.\n\t * @param {Paper} [paper] The paper to run the research on if it shouldn't\n\t *                        be run on the latest paper.\n\t *\n\t * @returns {Object} The result of the research.\n\t */\n\trunResearch( id, { name, paper = null } ) {\n\t\t// Save morphology data if it is available in the current researcher.\n\t\tconst morphologyData = this._researcher.getData( \"morphology\" );\n\n\t\tlet researcher = this._researcher;\n\t\t// When a specific paper is passed we create a temporary new researcher.\n\t\tif ( paper !== null ) {\n\t\t\tresearcher = new Researcher( paper );\n\t\t\tresearcher.addResearchData( \"morphology\", morphologyData );\n\t\t}\n\n\t\treturn researcher.getResearch( name );\n\t}\n\n\t/**\n\t * Send the result of a custom message back.\n\t *\n\t * @param {number} id     The request id.\n\t * @param {Object} result The result.\n\t *\n\t * @returns {void}\n\t */\n\trunResearchDone( id, result ) {\n\t\tif ( result.error ) {\n\t\t\tthis.send( \"runResearch:failed\", id, result );\n\t\t\treturn;\n\t\t}\n\t\tthis.send( \"runResearch:done\", id, result );\n\t}\n}\n"]}