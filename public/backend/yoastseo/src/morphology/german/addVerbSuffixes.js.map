{"version":3,"sources":["../../../../src/morphology/german/addVerbSuffixes.js"],"names":["addVerbSuffixes","endsInDT","endsInConsMN","endsInChMN","endsInSZT","endsInNonVerbEnding","morphologyDataVerbs","stemmedWord","allVerbSuffixes","verbSuffixes","slice","test","filter","suffix","startsWith"],"mappings":";;;;;QAgBgBA,e,GAAAA,e;;AAhBhB;;AACA,IAAMC,WAAW,OAAjB;AACA,IAAMC,eAAe,iBAArB;AACA,IAAMC,aAAa,SAAnB;AACA,IAAMC,YAAY,SAAlB;AACA,IAAMC,sBAAsB,WAA5B;;AAGA;;;;;;;;AAQO,SAASL,eAAT,CAA0BM,mBAA1B,EAA+CC,WAA/C,EAA6D;AACnE,KAAIC,kBAAkBF,oBAAoBG,YAApB,CAAiCC,KAAjC,EAAtB;;AAEA;AACA,KAAOT,QAAF,CAAaU,IAAb,CAAmBJ,WAAnB,KACFL,YAAF,CAAiBS,IAAjB,CAAuBJ,WAAvB,CADI,IAEFJ,UAAF,CAAeQ,IAAf,CAAqBJ,WAArB,CAFD,EAEsC;AACrCC,oBAAkBA,gBAAgBI,MAAhB,CAAwB;AAAA,UAAUC,OAAOC,UAAP,CAAmB,GAAnB,CAAV;AAAA,GAAxB,CAAlB;;AAEA,SAAO,wCAAqBP,WAArB,EAAkCC,eAAlC,CAAP;AACA;;AAED;AACA,KAAOJ,SAAF,CAAcO,IAAd,CAAoBJ,WAApB,CAAL,EAAyC;AACxCC,oBAAkBA,gBAAgBI,MAAhB,CAAwB;AAAA,UAAUC,WAAW,IAArB;AAAA,GAAxB,CAAlB;;AAEA,SAAO,wCAAqBN,WAArB,EAAkCC,eAAlC,CAAP;AACA;;AAED;AACA,KAAOH,mBAAF,CAAwBM,IAAxB,CAA8BJ,WAA9B,CAAL,EAAmD;AAClD,SAAO,EAAP;AACA;;AAED,QAAO,wCAAqBA,WAArB,EAAkCC,eAAlC,CAAP;AACA","file":"addVerbSuffixes.js","sourcesContent":["import { applySuffixesToStem } from \"../morphoHelpers/suffixHelpers\";\nconst endsInDT = /[dt]$/;\nconst endsInConsMN = /[tkbdgzfv][mn]$/;\nconst endsInChMN = /ch[mn]$/;\nconst endsInSZT = /[szÃŸt]$/;\nconst endsInNonVerbEnding = /[aoycjw]$/;\n\n\n/**\n * Adds verb suffixes to a stem. Depending on the ending of the stem, the list of suffixes might be modified.\n *\n * @param {Object}  morphologyDataVerbs     The German morphology data for verbs.\n * @param {string}  stemmedWord             The stemmed word on which to apply the suffixes.\n *\n * @returns {string[]} The suffixed verb forms.\n */\nexport function addVerbSuffixes( morphologyDataVerbs, stemmedWord ) {\n\tlet allVerbSuffixes = morphologyDataVerbs.verbSuffixes.slice();\n\n\t// Check whether the stem has an ending that only takes suffixes starting in e-.\n\tif ( ( endsInDT ).test( stemmedWord ) ||\n\t\t( endsInConsMN ).test( stemmedWord ) ||\n\t\t( endsInChMN ).test( stemmedWord ) ) {\n\t\tallVerbSuffixes = allVerbSuffixes.filter( suffix => suffix.startsWith( \"e\" ) );\n\n\t\treturn applySuffixesToStem( stemmedWord, allVerbSuffixes );\n\t}\n\n\t// Check whether the stem has an ending that doesn't take the suffix -st.\n\tif ( ( endsInSZT ).test( stemmedWord ) ) {\n\t\tallVerbSuffixes = allVerbSuffixes.filter( suffix => suffix !== \"st\" );\n\n\t\treturn applySuffixesToStem( stemmedWord, allVerbSuffixes );\n\t}\n\n\t// Check whether the stem has an ending that marks it as a non-verbal stem.\n\tif ( ( endsInNonVerbEnding ).test( stemmedWord ) ) {\n\t\treturn [];\n\t}\n\n\treturn applySuffixesToStem( stemmedWord, allVerbSuffixes );\n}\n"]}